Delectus Constants

  NONE         0
  DESCENDING   1
  ASCENDING    2
  NUMERIC      3
  ALPHABETICAL 4

Delectus Types

  err
    A signed integer representing an error condition signaled by the
    delectus engine.

    NULL               [0L] unable to return value
    CANT_CREATE        [-1] unable to create delectus.
    CANT_ADD_ROW       [-2] unable to add row
    LABEL_IN_USE       [-3] column label is already in use
    NO_SUCH_COLUMN     [-4] no such column
    INDEX_OUT_OF_RANGE [-5] row-index out of range
    CANT_UPDATE        [-6] unable to update a delectus
    CANT_WRITE         [-7] unable to write to the supplied pathname
    CANT_READ          [-8] unable to read from the supplied pathname
    BAD_FORMAT         [-9] can't interpret supplied data

  NULL
    API calls that return pointers to dynamically-allocated data, or
    to engine-managed structures, may instead return NULL. In that
    case, the returned value should be interpreted as the error code
    NULL, and it indicates that the engine was unable to return the
    value requested. NULL may be an expected value in some cases; for
    example, value_at returns NULL if no value has been stored at the
    indicated column and row, or if the column does not exist in the
    delectus, or if the row index is out of range.

  bool
    An unsigned byte equal to either of:
      0: false
      1: true

  delectus
    An opaque data type created and managed by the engine,
    representing a table-structured collection of string values. The
    only access to the internals of a delectus structure is provided
    by the Delectus API. A delectus comprises columns and rows; the
    combination of a delectus, a column label, and a row index
    uniquely identify a value.

Delectus Memory Management

  Strings returned from Delectus API calls are dynamically
  allocated. It is the caller's responsibility to free them when they
  are no longer used.

  The delectus type is an opaque type represented as a long
  integer. You should not attempt to free delectus values.

Delectus API

  Summary of calls:

       (int) version ()
  (delectus) make_delectus ()
       (err) add_row (delectus del)
       (err) add_column (delectus del, char* label)
     (char*) value_at (delectus del, char* column_label, int row_index)
       (err) put_value_at (delectus del, char* column_label, int row-index, char* value)
       (err) mark_column_deleted (delectus del, char* column_label, bool deleted)
       (err) mark_row_deleted (delectus del, int row_index, bool deleted)
      (bool) show_deleted (delectus del)
       (err) set_show_deleted (delectus del, bool show)
       (err) compact_delectus (delectus del)
     (char*) sort_column (delectus del)
       (err) set_sort_column (delectus del, char* column_label)
       (int) sort_order (delectus del)
       (err) set_sort_order (delectus del, int order)
       (int) sort_type (delectus del)
       (err) set_sort_type (delectus del, int type)
     (char*) filter_text (delectus del)
       (err) set_filter_text (delectus del, char* text)
       (err) write_delectus (delectus del, char* path)
  (delectus) read_delectus (char* path)
       (err) write_delectus_csv (delectus del, char* path)
  (delectus) read_delectus_csv (char* path)

API Details

(int)version()

  Returns the version of the delectus engine.

(delectus)make_delectus()

  Returns a newly-constructed empty delectus, or nil if none could be
  created.

  Errors:
    NULL: unable to create delectus.

(err)add_row(delectus del)

  Adds a new row of null values. The number of items in the new row is
  equal to the number of column labels in the delectus. The new row is
  added last.

  Errors:
    CANT_ADD_ROW: unable to add row

(err)add_column (delectus del, char* label)

  Adds a new column whose label is given by the label input. The new
  column is added last.

  Errors:
    LABEL_IN_USE: label is already in use (test is case-insensitive)

(char*)value_at (delectus del, char* column_label, int row_index)

  Returns the value stored in the row-indexth element of the column
  whose label is column-label.

  Errors:
    NULL: no such value

(err)put_value_at (delectus del, char* column_label, int row-index, char* value)

  Updates del to store value at the row-indexth element of
  the column labeled column-label.

  Errors:
    NO_SUCH_COLUMN no such column
    INDEX_OUT_OF_RANGE row-index out of range

(err)mark_column_deleted (delectus del, char* column_label, bool deleted)

  Updates delectus to mark the indicated column deleted.

  Errors:
    NO_SUCH_COLUMN no such column

(err)mark_row_deleted (delectus del, int row_index, bool deleted)

  Updates delectus to mark the indicated row deleted.

  Errors:
    INDEX_OUT_OF_RANGE row-index out of range

(bool)show_deleted (delectus del)

  Returns true if the delectus includes deleted rows and columns in
  enumerations of its contents, and false otherwise

(err)set_show_deleted (delectus del, bool show)

  Updates delectus to indicate whether to include deleted items in
  enumerations of its contents.

  Errors:
    CANT_UPDATE unable to update the state of del

(err)compact_delectus (delectus del)

  Updates delectus to permanently remove any rows or columns that are
  marked deleted.

  Errors:
    CANT_UPDATE unable to update the state of del

(char*)sort_column (delectus del)

  Returns the label of the column that is the current sort column, or
  nil.

  Errors:
    NULL no sort column is selected.

(err)set_sort_column (delectus del, char* column_label)

  Updates the delectus, making the indicated column the sort column.

  Errors:
    NO_SUCH_COLUMN no such column
    CANT_UPDATE unable to update the state of del

(int)sort_order (delectus del)

  Returns either ASCENDING, DESCENDING, or NONE

(err)set_sort_order (delectus del, int order)

  Updates the sort order according to the order input. Order may be
  either ASCENDING, DESCENDING, or NONE

  Errors:
    CANT_UPDATE unable to update the state of del

(int)sort_type (delectus del)

  Returns either ALPHABETICAL, NUMERIC, or NONE

(err)set_sort_type (delectus del, int type)

  Updates the sort type according to the type input. Type may be
  either ALPHABETICAL, NUMERIC, or NONE

  Errors:
    CANT_UPDATE unable to update the state of del

(char*)filter_text (delectus del)

  Returns the text string currently used as the delectus' filter text,
  or NULL.

(err)set_filter_text (delectus del, char* text)

  Updates the delectus to make text its filter text.

  Errors:
    CANT_UPDATE unable to update the state of del

(err)write_delectus (delectus del, char* path)

  Writes a serialized representation of delectus to the file at path.

  Errors:
    CANT_WRITE unable to write to the supplied pathname

(delectus)read_delectus (char* path)

  Reads bytes from port, interpreting them as a serialized
  representation of a delectus, and returning the reconstructed
  delectus.

  Errors:
    NULL can't read the delectus data from the supplied path

(err)write_delectus_csv (delectus del, char* path)

  Writes a csv representation of delectus to port.

  Errors:
    CANT_WRITE unable to write to the supplied pathname

(delectus)read_delectus_csv (char* path)

  Reads text from port, interpreting it as a csv representation of a
  delectus, and returning the reconstructed delectus.

  Errors:
    NULL can't read the delectus data from the supplied path
