;;;; ***********************************************************************
;;;;
;;;; Name:          command.lisp
;;;; Project:       Delectus 2
;;;; Purpose:       command objects 
;;;; Author:        mikel evins
;;;; Copyright:     2017 by mikel evins
;;;;
;;;; ***********************************************************************

(in-package :delectus.command)

;;; =====================================================================
;;; Commands
;;; =====================================================================
;;; Commands encapsulate events generated by the UI that require
;;; interaction with the model. Commands are posted to the document,
;;; which then executes them against the model.

;;; NOTES
;;; how to get the rowid of an insert:
#|
(with-open-database (db (data-path $store))
  (with-transaction db
    (execute-to-list db "insert into contents (\"Title\") values (\"Santa Claus versus the Martians\")")
    (execute-to-list db "select last_insert_rowid()")))
|#


;;; ---------------------------------------------------------------------
;;; command
;;; ---------------------------------------------------------------------
;;; *exported class*
;;; The type of objects that represent Delectus user commands.

(defclass command ()())

(defclass insert-row-command (command)())
(defclass undo-insert-row-command (command)())

(defclass update-row-command (command)())
(defclass undo-update-row-command (command)())

(defclass delete-row-command (command)())
(defclass undo-delete-row-command (command)())

(defclass add-column-command (command)())
(defclass undo-add-column-command (command)())

(defclass delete-column-command (command)())
(defclass undo-delete-column-command (command)())

(defclass move-column-command (command)())
(defclass undo-move-column-command (command)())

